{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loadBalancers_lb_name": {
            "defaultValue": "lb",
            "type": "String"
        },
        "publicIPAddresses_lb_ext_ip_externalid": {
            "defaultValue": "/subscriptions/ca75f0fc-4ec2-40c7-a8d4-5365017a4fe0/resourceGroups/RG_test/providers/Microsoft.Network/publicIPAddresses/lb_ext_ip",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-05-01",
            "name": "[parameters('loadBalancers_lb_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_lb_name'), 'pool')]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancers_lb_name'), '_if_ip')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_lb_name'), '_if_ip'))]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[parameters('publicIPAddresses_lb_ext_ip_externalid')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "pool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_lb_name'), 'pool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "RG_test_vm1145ipconfig1",
                                    "properties": {}
                                },
                                {
                                    "name": "RG_test_vm2425ipconfig1",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "rule",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name')), '/loadBalancingRules/rule')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_lb_name'), '_if_ip'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_lb_name'), 'pool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_lb_name'), 'pool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name')), '/probes/probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "probe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name')), '/probes/probe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('loadBalancers_lb_name'), '/pool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_lb_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "RG_test_vm1145ipconfig1",
                        "properties": {}
                    },
                    {
                        "name": "RG_test_vm2425ipconfig1",
                        "properties": {}
                    }
                ]
            }
        }
    ]
}